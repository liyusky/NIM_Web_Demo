{"version":3,"file":"blurify.min.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["export function preload(imageUrls) {\n    let images = [],\n        count = 0,\n        doneAction = function () {};\n\n    imageUrls = (typeof imageUrls != 'object') ? [imageUrls] : imageUrls;\n\n    imageUrls.length === 0 && doneAction(images);\n\n    imageUrls.map((image, i) => {\n        images[i] = new Image();\n        images[i].crossOrigin = '*';\n        images[i].src = image.dataset ? image.dataset.src : image.getAttribute('data-src');\n        images[i].onload = imageLoad;\n        images[i].onerror = imageLoad;\n    });\n\n    function imageLoad() {\n        count++;\n        if (count == imageUrls.length) doneAction(images);\n    }\n\n    return {\n        done() {\n            doneAction = arguments[0] || doneAction;\n        },\n    };\n}\n\nexport function cssSupport() {\n    const el = document.createElement('div');\n    const property = arguments[0];\n\n    switch (arguments.length) {\n        case 1:\n            return property in el.style ? true : false;\n        case 2:\n            el.style[property] = arguments[1];\n            return el.style[property] ? true : false;\n        default:\n            return false;\n    }\n}\n","import {\n    preload,\n    cssSupport,\n} from './utils';\n\nexport default function blurify(options) {\n    if (!(this instanceof blurify)) return new blurify(...arguments);\n\n    if (typeof options === 'number') {\n        options = {\n            blur: options,\n            images: arguments[1],\n            mode: 'auto',\n        };\n    }\n\n    this.options = options;\n    this.blur = options.blur || 6;\n    this.mode = options.mode || 'css';\n    this.$els = options.images.nodeType === 1 ? [options.images] : [].slice.call(options.images);\n\n    if (this.mode == 'auto') {\n        cssSupport('filter', 'blur(1px)') ? this.useCSSMode() : this.useCanvasMode();\n    } else if (this.mode == 'css') {\n        this.blur = this.blur / 2;\n        this.useCSSMode();\n    } else {\n        this.useCanvasMode();\n    }\n}\n\nblurify.prototype.useCSSMode = function () {\n    this.$els.map(el => {\n        el.src = el.dataset ? el.dataset.src : el.getAttribute('data-src');\n        el.style['filter'] = el.style['-webkit-filter'] = `blur(${this.blur}px)`;\n    });\n};\n\nblurify.prototype.useCanvasMode = function () {\n    this.imageType = this.options.imageType || `image/jpeg`;\n    preload(this.$els).done(images => {\n        images.map((image, index) => {\n            this.$els[index].src = this.getDataURL(image);\n        });\n    });\n};\n\nblurify.prototype.blurify = function(canvas, blur) {\n    let ctx = canvas.getContext('2d');\n    ctx.globalAlpha = 1 / (2 * blur);\n    for (let y = -blur; y <= blur; y += 2) {\n        for (let x = -blur; x <= blur; x += 2) {\n            ctx.drawImage(canvas, x, y);\n            if (x >= 0 && y >= 0) ctx.drawImage(canvas, -(x - 1), -(y - 1));\n        }\n    }\n    ctx.globalAlpha = 1;\n};\n\nblurify.prototype.getDataURL = function(image) {\n    let canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d');\n\n    canvas.width = image.width;\n    canvas.height = image.height;\n    ctx.drawImage(image, 0, 0);\n    this.blurify(canvas, this.blur);\n    return canvas.toDataURL(this.imageType);\n};\n"],"names":["preload","imageUrls","imageLoad","count","length","doneAction","images","map","image","i","Image","crossOrigin","src","dataset","getAttribute","onload","onerror","arguments","cssSupport","el","document","createElement","property","style","blurify","options","this","blur","mode","$els","nodeType","slice","call","useCSSMode","useCanvasMode","prototype","_this","imageType","done","index","_this2","getDataURL","canvas","ctx","getContext","globalAlpha","y","x","drawImage","width","height","toDataURL"],"mappings":"4LAAA,SAAgBA,GAAQC,WAiBXC,SAEDC,GAASF,EAAUG,QAAQC,EAAWC,MAlB1CA,MACAH,EAAQ,EACRE,EAAa,sBAEgB,oBAAbJ,gBAAAA,KAA0BA,GAAaA,EAEtC,MAAXG,QAAgBC,EAAWC,KAE3BC,IAAI,SAACC,EAAOC,KACXA,GAAK,GAAIC,SACTD,GAAGE,YAAc,MACjBF,GAAGG,IAAMJ,EAAMK,QAAUL,EAAMK,QAAQD,IAAMJ,EAAMM,aAAa,cAChEL,GAAGM,OAASb,IACZO,GAAGO,QAAUd,uBAUHe,UAAU,IAAMZ,IAKzC,QAAgBa,QACNC,GAAKC,SAASC,cAAc,OAC5BC,EAAWL,UAAU,UAEnBA,UAAUb,YACT,SACMkB,KAAYH,GAAGI,UACrB,YACEA,MAAMD,GAAYL,UAAU,KACxBE,EAAGI,MAAMD,kBAET,GCnCJ,QAASE,GAAQC,QACtBC,eAAgBF,IAAU,yCAAWA,2CAAWP,aAE/B,iBAAZQ,aAEGA,SACER,UAAU,QACZ,cAITQ,QAAUA,OACVE,KAAOF,EAAQE,MAAQ,OACvBC,KAAOH,EAAQG,MAAQ,WACvBC,KAAmC,IAA5BJ,EAAQnB,OAAOwB,UAAkBL,EAAQnB,WAAayB,MAAMC,KAAKP,EAAQnB,QAEpE,QAAboB,KAAKE,OACM,SAAU,aAAeF,KAAKO,aAAeP,KAAKQ,gBACzC,OAAbR,KAAKE,WACPD,KAAOD,KAAKC,KAAO,OACnBM,mBAEAC,sOAIbV,GAAQW,UAAUF,WAAa,2BACtBJ,KAAKtB,IAAI,cACPK,IAAMO,EAAGN,QAAUM,EAAGN,QAAQD,IAAMO,EAAGL,aAAa,cACpDS,MAAH,OAAqBJ,EAAGI,MAAM,0BAA4Ba,EAAKT,cAIvEH,EAAQW,UAAUD,cAAgB,2BACzBG,UAAYX,KAAKD,QAAQY,0BACtBX,KAAKG,MAAMS,KAAK,cACb/B,IAAI,SAACC,EAAO+B,KACVV,KAAKU,GAAO3B,IAAM4B,EAAKC,WAAWjC,QAKnDgB,EAAQW,UAAUX,QAAU,SAASkB,EAAQf,MACrCgB,GAAMD,EAAOE,WAAW,QACxBC,YAAc,GAAK,EAAIlB,OACtB,GAAImB,IAAKnB,EAAMmB,GAAKnB,EAAMmB,GAAK,MAC3B,GAAIC,IAAKpB,EAAMoB,GAAKpB,EAAMoB,GAAK,IAC5BC,UAAUN,EAAQK,EAAGD,GACrBC,GAAK,GAAKD,GAAK,GAAGH,EAAIK,UAAUN,IAAUK,EAAI,KAAMD,EAAI,MAGhED,YAAc,GAGtBrB,EAAQW,UAAUM,WAAa,SAASjC,MAChCkC,GAAStB,SAASC,cAAc,UAChCsB,EAAMD,EAAOE,WAAW,eAErBK,MAAQzC,EAAMyC,QACdC,OAAS1C,EAAM0C,SAClBF,UAAUxC,EAAO,EAAG,QACnBgB,QAAQkB,EAAQhB,KAAKC,MACnBe,EAAOS,UAAUzB,KAAKW"}