!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define("blurify",e):t.blurify=e()}(this,function(){"use strict";function t(t){function e(){i++,i==t.length&&r(o)}var o=[],i=0,r=function(){};return t="object"!=(void 0===t?"undefined":n(t))?[t]:t,0===t.length&&r(o),t.map(function(t,n){o[n]=new Image,o[n].crossOrigin="*",o[n].src=t.dataset?t.dataset.src:t.getAttribute("data-src"),o[n].onload=e,o[n].onerror=e}),{done:function(){r=arguments[0]||r}}}function e(){var t=document.createElement("div"),e=arguments[0];switch(arguments.length){case 1:return e in t.style;case 2:return t.style[e]=arguments[1],!!t.style[e];default:return!1}}function o(t){if(!(this instanceof o))return new(Function.prototype.bind.apply(o,[null].concat(Array.prototype.slice.call(arguments))));"number"==typeof t&&(t={blur:t,images:arguments[1],mode:"auto"}),this.options=t,this.blur=t.blur||6,this.mode=t.mode||"css",this.$els=1===t.images.nodeType?[t.images]:[].slice.call(t.images),"auto"==this.mode?e("filter","blur(1px)")?this.useCSSMode():this.useCanvasMode():"css"==this.mode?(this.blur=this.blur/2,this.useCSSMode()):this.useCanvasMode()}var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};return o.prototype.useCSSMode=function(){var t=this;this.$els.map(function(e){e.src=e.dataset?e.dataset.src:e.getAttribute("data-src"),e.style.filter=e.style["-webkit-filter"]="blur("+t.blur+"px)"})},o.prototype.useCanvasMode=function(){var e=this;this.imageType=this.options.imageType||"image/jpeg",t(this.$els).done(function(t){t.map(function(t,o){e.$els[o].src=e.getDataURL(t)})})},o.prototype.blurify=function(t,e){var o=t.getContext("2d");o.globalAlpha=1/(2*e);for(var n=-e;n<=e;n+=2)for(var i=-e;i<=e;i+=2)o.drawImage(t,i,n),i>=0&&n>=0&&o.drawImage(t,-(i-1),-(n-1));o.globalAlpha=1},o.prototype.getDataURL=function(t){var e=document.createElement("canvas"),o=e.getContext("2d");return e.width=t.width,e.height=t.height,o.drawImage(t,0,0),this.blurify(e,this.blur),e.toDataURL(this.imageType)},o});
//# sourceMappingURL=blurify.min.js.map
